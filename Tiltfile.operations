
print("""
-----------------------------------------------------------------
Hello honeycomb-systems/skeleton! Tilt is evaluating the services
configured under the operations/ directory.
-----------------------------------------------------------------
""".strip())


# Create namespace
def operations():
    # Deploy to k8s
    local_resource(
        'install-namespaces',
        cmd='kubectl apply -f ./operations/charts/namespace.yaml'
    )


# Deploy Postgres for data & state management
def data_postgres():
    # Deploy to k8s
    local_resource(
        'install-crunchy-postgres-operator',
        cmd='kubectl apply --server-side -k ./operations/data/postgres-operator/charts/default'
    )


# Deploy Keycloak for identity & access management
def identity_keycloak():
    # Deploy to k8s
    k8s_yaml(kustomize('./operations/identity/keycloak/charts/'))

    # Setup port-forward
    k8s_resource(workload='keycloak', port_forwards='8080:8080')


# Deploy Istio for network mesh and proxy
def network_istio():
    # Deploy to k8s
    k8s_yaml(kustomize('./operations/network/istio/charts/'), allow_duplicates=True)
    k8s_yaml(kustomize('./operations/network/metallb/charts/'), allow_duplicates=True)


# Deploy Vault for secrets management
def secrets_vault():
    # Deploy to k8s
    k8s_yaml(kustomize('./operations/secrets/vault/charts/'))

    # Setup port-forward
    k8s_resource(workload='vault', port_forwards='8200:8200')


# Deploy Minio Operator for S3 compatible storage
def storage_minio_operator():
    # Deploy to k8s
    k8s_yaml(['./operations/storage/minio/charts/console.yaml'])

    # Setup port-forward
    k8s_resource(workload='console', port_forwards='9090:9090')


# Deploy Minio tenants for S3 compatible storage
def storage_tenants():
    # Deploy to k8s
    k8s_yaml(kustomize('./operations/storage/tenants/storage-main/charts/'))

    # TODO: Tilt.dev can't find this, need to setup proxy
    # and limit the number of port-forwards required, as well
    # as gain more granular control over what to forward to

    # Setup port-forward
    # k8s_resource(workload='myminio-console', port_forwards='9443:9443')


# Load Tilt extensions:
load('ext://git_resource', 'git_checkout')

# Prune old Docker images
docker_prune_settings(disable=False, max_age_mins=120, num_builds=3, keep_recent=2)


# Deploy operations applications, and watch/reload as changes are saved
operations()

data_postgres()
network_istio()

identity_keycloak()
secrets_vault()
storage_minio_operator()
storage_tenants()
